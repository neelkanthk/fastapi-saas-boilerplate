"""create_all_tables

Revision ID: 73c90ccaee0b
Revises: 
Create Date: 2025-09-18 23:24:01.623215

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '73c90ccaee0b'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('analytics',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('timestamp', sa.TIMESTAMP(timezone=True), server_default='now()', nullable=False),
    sa.Column('total_users', sa.INTEGER(), nullable=False),
    sa.Column('active_users_daily', sa.INTEGER(), nullable=False),
    sa.Column('active_users_weekly', sa.INTEGER(), nullable=False),
    sa.Column('active_users_monthly', sa.INTEGER(), nullable=False),
    sa.Column('pro_users', sa.INTEGER(), nullable=False),
    sa.Column('free_users', sa.INTEGER(), nullable=False),
    sa.Column('total_domains', sa.INTEGER(), nullable=False),
    sa.Column('verified_domains', sa.INTEGER(), nullable=False),
    sa.Column('pending_domains', sa.INTEGER(), nullable=False),
    sa.Column('total_scans', sa.INTEGER(), nullable=False),
    sa.Column('scans_today', sa.INTEGER(), nullable=False),
    sa.Column('scans_this_week', sa.INTEGER(), nullable=False),
    sa.Column('scans_this_month', sa.INTEGER(), nullable=False),
    sa.Column('average_scan_duration', sa.Float(), nullable=True),
    sa.Column('failed_scans_count', sa.INTEGER(), nullable=False),
    sa.Column('scan_success_rate', sa.Float(), nullable=True),
    sa.Column('total_reports', sa.INTEGER(), nullable=False),
    sa.Column('average_performance_score', sa.Float(), nullable=True),
    sa.Column('average_seo_score', sa.Float(), nullable=True),
    sa.Column('average_accessibility_score', sa.Float(), nullable=True),
    sa.Column('average_best_practices_score', sa.Float(), nullable=True),
    sa.Column('average_security_score', sa.Float(), nullable=True),
    sa.Column('average_pwa_score', sa.Float(), nullable=True),
    sa.Column('total_lighthouse_api_calls', sa.INTEGER(), nullable=False),
    sa.Column('total_openai_api_calls', sa.INTEGER(), nullable=False),
    sa.Column('average_openai_response_time', sa.Float(), nullable=True),
    sa.Column('total_revenue', sa.Float(), nullable=False),
    sa.Column('mrr', sa.Float(), nullable=False),
    sa.Column('conversion_rate', sa.Float(), nullable=True),
    sa.Column('churn_rate', sa.Float(), nullable=True),
    sa.Column('average_response_time', sa.Float(), nullable=True),
    sa.Column('error_count', sa.INTEGER(), nullable=False),
    sa.Column('user_geographic_distribution', sa.JSON(), nullable=True),
    sa.Column('scan_type_distribution', sa.JSON(), nullable=True),
    sa.Column('error_distribution', sa.JSON(), nullable=True),
    sa.Column('subscription_distribution', sa.JSON(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('jobs',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('priority', sa.INTEGER(), server_default='0', nullable=False),
    sa.Column('retries', sa.INTEGER(), server_default='0', nullable=False),
    sa.Column('max_retries', sa.INTEGER(), server_default='3', nullable=False),
    sa.Column('last_error', sa.TEXT(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default='now()', nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_verification_token',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('user_id', sa.INTEGER(), nullable=False),
    sa.Column('type', sa.Enum('new_signup', 'password_reset', name='user_verification_request_type_enum'), nullable=False),
    sa.Column('token', sa.VARCHAR(length=255), nullable=True),
    sa.Column('token_expiry', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('is_verified', sa.BOOLEAN(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default='now()', nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('email', sa.VARCHAR(length=255), nullable=False),
    sa.Column('password', sa.VARCHAR(length=255), nullable=False),
    sa.Column('is_verified', sa.BOOLEAN(), server_default='false', nullable=False),
    sa.Column('refresh_token', sa.VARCHAR(length=255), nullable=True),
    sa.Column('refresh_token_expiry', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('last_login', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default='now()', nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('failed_jobs',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('job_id', sa.INTEGER(), nullable=False),
    sa.Column('error_message', sa.TEXT(), nullable=True),
    sa.Column('failed_at', sa.TIMESTAMP(timezone=True), server_default='now()', nullable=False),
    sa.ForeignKeyConstraint(['job_id'], ['jobs.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('notifications',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('user_id', sa.INTEGER(), nullable=False),
    sa.Column('message', sa.VARCHAR(length=255), nullable=False),
    sa.Column('is_read', sa.BOOLEAN(), server_default='false', nullable=False),
    sa.Column('is_sent', sa.BOOLEAN(), server_default='false', nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default='now()', nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('subscriptions',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('user_id', sa.INTEGER(), nullable=False),
    sa.Column('sub_type', sa.Enum('free', 'pro', name='subscription_type_enum'), server_default='free', nullable=False),
    sa.Column('status', sa.Enum('active', 'inactive', 'canceled', 'past_due', name='subscription_status_enum'), server_default='inactive', nullable=False),
    sa.Column('start_date', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('end_date', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('max_domains', sa.INTEGER(), server_default='1', nullable=False),
    sa.Column('max_scans_per_month', sa.INTEGER(), server_default='5', nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default='now()', nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_profiles',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('user_id', sa.INTEGER(), nullable=False),
    sa.Column('full_name', sa.VARCHAR(length=255), nullable=True),
    sa.Column('country', sa.VARCHAR(length=255), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default='now()', nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('user_profiles')
    op.drop_table('subscriptions')
    op.drop_table('notifications')
    op.drop_table('failed_jobs')
    op.drop_table('users')
    op.drop_table('user_verification_token')
    op.drop_table('jobs')
    op.drop_table('analytics')
    # ### end Alembic commands ###
