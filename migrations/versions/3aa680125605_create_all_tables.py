"""create_all_tables

Revision ID: 3aa680125605
Revises: 
Create Date: 2025-09-19 01:52:21.315047

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '3aa680125605'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('jobs',
                    sa.Column('id', sa.INTEGER(), nullable=False),
                    sa.Column('priority', sa.INTEGER(), server_default='0', nullable=False),
                    sa.Column('retries', sa.INTEGER(), server_default='0', nullable=False),
                    sa.Column('max_retries', sa.INTEGER(), server_default='3', nullable=False),
                    sa.Column('last_error', sa.TEXT(), nullable=True),
                    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default='now()', nullable=False),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('plans',
                    sa.Column('id', sa.INTEGER(), nullable=False),
                    sa.Column('name', sa.Enum('free', 'pro', 'enterprise', name='plan_name_enum'),
                              server_default='free', nullable=False),
                    sa.Column('description', sa.VARCHAR(length=255), nullable=True),
                    sa.Column('price', sa.VARCHAR(length=100), nullable=True),
                    sa.Column('features', sa.JSON(), nullable=True),
                    sa.Column('is_active', sa.BOOLEAN(), nullable=False),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_index(op.f('ix_plans_id'), 'plans', ['id'], unique=False)
    op.create_table('user_verification_tokens',
                    sa.Column('id', sa.INTEGER(), nullable=False),
                    sa.Column('user_id', sa.INTEGER(), nullable=False),
                    sa.Column('type', sa.Enum('new_signup', 'password_reset',
                                              name='user_verification_request_type_enum'), nullable=False),
                    sa.Column('token', sa.VARCHAR(length=255), nullable=True),
                    sa.Column('token_expiry', sa.TIMESTAMP(timezone=True), nullable=True),
                    sa.Column('is_used', sa.BOOLEAN(), nullable=True),
                    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default='now()', nullable=False),
                    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), nullable=True),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('users',
                    sa.Column('id', sa.INTEGER(), nullable=False),
                    sa.Column('email', sa.VARCHAR(length=255), nullable=False),
                    sa.Column('password', sa.VARCHAR(length=255), nullable=False),
                    sa.Column('role', sa.VARCHAR(length=50), server_default='member', nullable=False),
                    sa.Column('is_verified', sa.BOOLEAN(), server_default='false', nullable=False),
                    sa.Column('last_login_at', sa.TIMESTAMP(timezone=True), nullable=True),
                    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default='now()', nullable=False),
                    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), nullable=True),
                    sa.PrimaryKeyConstraint('id'),
                    sa.UniqueConstraint('email')
                    )
    op.create_table('failed_jobs',
                    sa.Column('id', sa.INTEGER(), nullable=False),
                    sa.Column('job_id', sa.INTEGER(), nullable=False),
                    sa.Column('error_message', sa.TEXT(), nullable=True),
                    sa.Column('failed_at', sa.TIMESTAMP(timezone=True), server_default='now()', nullable=False),
                    sa.ForeignKeyConstraint(['job_id'], ['jobs.id'], ondelete='CASCADE'),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('notifications',
                    sa.Column('id', sa.INTEGER(), nullable=False),
                    sa.Column('user_id', sa.INTEGER(), nullable=False),
                    sa.Column('message', sa.VARCHAR(length=255), nullable=False),
                    sa.Column('is_read', sa.BOOLEAN(), server_default='false', nullable=False),
                    sa.Column('is_sent', sa.BOOLEAN(), server_default='false', nullable=False),
                    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default='now()', nullable=False),
                    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), nullable=True),
                    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('subscriptions',
                    sa.Column('id', sa.INTEGER(), nullable=False),
                    sa.Column('user_id', sa.INTEGER(), nullable=False),
                    sa.Column('plan_id', sa.INTEGER(), nullable=False),
                    sa.Column('status', sa.Enum('active', 'inactive', 'canceled', 'past_due',
                                                name='subscription_status_enum'), server_default='inactive', nullable=False),
                    sa.Column('start_date', sa.TIMESTAMP(timezone=True), nullable=True),
                    sa.Column('end_date', sa.TIMESTAMP(timezone=True), nullable=True),
                    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default='now()', nullable=False),
                    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), nullable=True),
                    sa.ForeignKeyConstraint(['plan_id'], ['plans.id'], ondelete='SET NULL'),
                    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('user_profiles',
                    sa.Column('id', sa.INTEGER(), nullable=False),
                    sa.Column('user_id', sa.INTEGER(), nullable=False),
                    sa.Column('full_name', sa.VARCHAR(length=255), nullable=True),
                    sa.Column('country', sa.VARCHAR(length=255), nullable=True),
                    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default='now()', nullable=False),
                    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), nullable=True),
                    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
                    sa.PrimaryKeyConstraint('id'),
                    sa.UniqueConstraint('user_id')
                    )
    op.create_table('user_sessions',
                    sa.Column('id', sa.INTEGER(), nullable=False),
                    sa.Column('user_id', sa.INTEGER(), nullable=False),
                    sa.Column('refresh_token', sa.VARCHAR(length=255), nullable=True),
                    sa.Column('refresh_token_expiry', sa.TIMESTAMP(timezone=True), nullable=True),
                    sa.Column('device_info', sa.VARCHAR(length=255), nullable=True),
                    sa.Column('ip_address', sa.VARCHAR(length=255), nullable=True),
                    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default='now()', nullable=False),
                    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('payments',
                    sa.Column('id', sa.INTEGER(), nullable=False),
                    sa.Column('user_id', sa.INTEGER(), nullable=False),
                    sa.Column('subscription_id', sa.INTEGER(), nullable=True),
                    sa.Column('amount', sa.NUMERIC(precision=10, scale=2), nullable=False),
                    sa.Column('currency', sa.VARCHAR(length=10), nullable=False),
                    sa.Column('status', sa.Enum('paid', 'failed', 'refunded',
                              name='payment_status_enum'), nullable=True),
                    sa.Column('invoice_url', sa.VARCHAR(length=500), nullable=True),
                    sa.Column('paid_at', sa.TIMESTAMP(timezone=True), nullable=True),
                    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default='now()', nullable=False),
                    sa.ForeignKeyConstraint(['subscription_id'], ['subscriptions.id'], ondelete='SET NULL'),
                    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_index(op.f('ix_payments_id'), 'payments', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_payments_id'), table_name='payments')
    op.drop_table('payments')
    op.drop_table('user_sessions')
    op.drop_table('user_profiles')
    op.drop_table('subscriptions')
    op.drop_table('notifications')
    op.drop_table('failed_jobs')
    op.drop_table('users')
    op.drop_table('user_verification_tokens')
    op.drop_index(op.f('ix_plans_id'), table_name='plans')
    op.drop_table('plans')
    op.drop_table('jobs')
    # ### end Alembic commands ###
